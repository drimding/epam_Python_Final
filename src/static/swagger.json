swagger: "2.0"
info:
  description: "Smart Meter description"
  version: "1.0.0"
  title: "Smart Meter"
  termsOfService: ""
  contact:
    name: "Serhii Viontsek"
    email: "drimding@gmail.com"
  license:
    name: "License GPL v3"
    url: "https://en.wikipedia.org/wiki/GNU_General_Public_License"
basePath: "/"
tags:
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our user"
    url: "http://swagger.io"
- name: "home"
  description: "Everything about your Homes"
  externalDocs:
    description: "Find out more"
    url: "http://#"
schemes:
- "http"
paths:
  /api/v1.0/home:
    get:
      tags:
      - "home"
      summary: "Show All Homes"
      description: ""
      operationId: "getHome"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
      security:
        - Bearer: []

    post:
      tags:
      - "home"
      summary: "Add a new home to the profile"
      description: ""
      operationId: "addHome"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Home object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Home"
      responses:
        "405":
          description: "Invalid input"
      security:
        - Bearer: []
  /api/v1.0/home/{uuid}:
    get:
      tags:
      - "home"
      summary: "Find home by getHomeByUUID"
      description: "Returns a single home"
      operationId: "getHomeByUUID"
      produces:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        description: "UUID of Home to return"
        required: true
        type: "string"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Home"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Home not found"
      security:
        - Bearer: []
    put:
      tags:
      - "home"
      summary: "Update an existing home"
      description: ""
      operationId: "updatePet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        description: "UUID of Home to return"
        required: true
        type: "string"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Home object that needs to be added "
        required: true
        schema:
          $ref: "#/definitions/Home"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Home not found"
        "405":
          description: "Validation exception"
      security:
        - Bearer: []
    delete:
      tags:
      - "home"
      summary: "Deletes a pet"
      description: ""
      operationId: "deletePet"
      produces:
      - "application/json"
      parameters:
      - name: "uuid"
        in: "path"
        description: "UUID of Home to return"
        required: true
        type: "string"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"
      security:
        - Bearer: []

  /api/v1.0/home/{home_uuid}/smartmeter/:
    get:
      tags:
      - "SmartMeter"
      summary: "Show All SmartMeters"
      description: ""
      operationId: "getsmartmeter"
      parameters:
      - name: "home_uuid"
        in: "path"
        description: "UUID of Home"
        required: true
        type: "string"
        format: "int64"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "405":
          description: "Invalid input"
      security:
        - Bearer: []

    post:
      tags:
      - "SmartMeter"
      summary: "Add a new SmartMeter to the profile"
      description: ""
      operationId: "addsmartmeter"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "home_uuid"
        in: "path"
        description: "UUID of Home"
        required: true
        type: "string"
        format: "int64"
      - in: "body"
        name: "body"
        description: "SmartMeter object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/SmartMeter"
      responses:
        "405":
          description: "Invalid input"
      security:
        - Bearer: []
  /api/v1.0/home/{home_uuid}/smartmeter/{smart_uuid}:
    get:
      tags:
      - "SmartMeter"
      summary: "Find home by getHomeByUUID"
      description: "Returns a single SmartMeter"
      operationId: "getSmartByUUID"
      produces:
      - "application/json"
      parameters:
      - name: "home_uuid"
        in: "path"
        description: "UUID of Home"
        required: true
        type: "string"
        format: "int64"
      - name: "smart_uuid"
        in: "path"
        description: "UUID of SmartMeter"
        required: true
        type: "string"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/SmartMeter"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "SmartMeter not found"
      security:
        - Bearer: []
    put:
      tags:
      - "SmartMeter"
      summary: "Update an existing home"
      description: ""
      operationId: "updateSmart"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "home_uuid"
        in: "path"
        description: "UUID of Home"
        required: true
        type: "string"
        format: "int64"
      - name: "smart_uuid"
        in: "path"
        description: "UUID of Smart"
        required: true
        type: "string"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Home object that needs to be added "
        required: true
        schema:
          $ref: "#/definitions/SmartMeter"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Home not found"
        "405":
          description: "Validation exception"
      security:
        - Bearer: []
    delete:
      tags:
      - "SmartMeter"
      summary: "Deletes a smart"
      description: ""
      operationId: "deleteSmart"
      produces:
      - "application/json"
      parameters:
      - name: "home_uuid"
        in: "path"
        description: "UUID of Home"
        required: true
        type: "string"
        format: "int64"
      - name: "smart_uuid"
        in: "path"
        description: "UUID of Smart"
        required: true
        type: "string"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Pet not found"
      security:
        - Bearer: []
  /auth/login:
    post:
      tags:
      - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"
  /auth/register:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"

  /auth/logout:
    get:
      tags:
      - "user"
      summary: "Logs out current logged in user session"
      description: ""
      operationId: "logoutUser"
      produces:
      - "application/xml"
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
securityDefinitions:
  Bearer:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  ApplianceMetaData:
    type: "object"
    properties:
      meter_value:
        type: "integer"
  SmartMeter:
    type: "object"
    properties:
      meter_name:
        type: "string"
  User:
    type: "object"
    properties:
      username:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"

  Home:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      home_name:
        type: "string"
        example: "main_home"
      address:
        type: "string"
        example: "LVIV"
